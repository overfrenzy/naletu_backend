<?php

namespace App\Http\Livewire;

use Livewire\Component;
use App\Models\Product;
use App\Models\QuantityType;
use Filament\Forms;
use Filament\Forms\Contracts\HasForms;
use Filament\Forms\Components\FileUpload;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Components\ViewField;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\Textarea;
use Filament\Forms\Components\Hidden;

class ProductForm extends Component implements HasForms
{
    use Forms\Concerns\InteractsWithForms;

    public $product;
    public $quantity_type_id;
    public $name;
    public $description;
    public $mrp;
    public $selling_price;
    public $image;
    public $category_id;

    protected $listeners = ['quantityTypeSelected'];

    public function mount($product = null)
    {
        $this->product = $product;

        $this->form->fill([
            'name' => $this->product?->name,
            'description' => $this->product?->description,
            'mrp' => $this->product?->mrp,
            'selling_price' => $this->product?->selling_price,
            'image' => $this->product?->image,
            'category_id' => $this->product?->category_id,
            'quantity_type_id' => $this->product?->quantity_type_id,
        ]);
    }

    public function quantityTypeSelected($value)
    {
        $this->quantity_type_id = $value;
    }

    protected function getFormSchema()
    {
        return [
            TextInput::make('name')
                ->required(),
            ViewField::make('quantity_type')
                ->view('livewire.quantity-type-select')
                ->extraData([
                    'selected' => fn () => $this->quantity_type_id,
                ]),
            Hidden::make('quantity_type_id')
                ->dehydrated(),
        ];
    }

    public function submit()
    {
        $data = $this->form->getState();

        $this->validate([
            'quantity_type_id' => 'nullable|exists:quantity_types,id',
            // ... other validations ...
        ]);

        if ($this->product) {
            $this->product->update($data);
        } else {
            $this->product = Product::create($data);
        }

        // Redirect or perform other actions
    }

    public function render()
    {
        return view('livewire.product-form');
    }
}
